{{{
  exports({ to: app.configPath('shopify.ts')  })
}}}
import env from '#start/env'
import { SHOPIFY } from '@mixxtor/adonisjs-shopify/constants'
import { defineConfig } from '@mixxtor/adonisjs-shopify'
import { restResources, type RestResources } from '@shopify/shopify-api/rest/admin/2025-07'
import { LATEST_API_VERSION, LogSeverity } from '@shopify/shopify-api'

const appUrlParts = new URL(env.get('APP_URL'))
const webhookUrl = (path: string, url = env.get('WEBHOOK_URL') || env.get('APP_URL')) => {
  url = url.endsWith('/') ? url : url + '/'
  return url + (path.startsWith('/') ? path.slice(1) : path)
}

const shopify = defineConfig({
  /**
   * Shopify configurations
   * @see https://github.com/Shopify/shopify-app-js/blob/main/packages/apps/shopify-api/docs/reference/shopifyApi.md
   */
  app: {
    apiKey: env.get('SHOPIFY_API_KEY', 'APIKeyFromPartnersDashboard'),
    apiSecretKey: env.get('SHOPIFY_API_SECRET', 'APISecretFromPartnersDashboard'),
    apiVersion: env.get('SHOPIFY_API_VERSION', LATEST_API_VERSION) as typeof LATEST_API_VERSION,
    scopes: env.get('SHOPIFY_API_SCOPES', 'read_products')?.split(','),
    hostScheme: appUrlParts.protocol.replace(':', '') as 'http' | 'https',
    hostName: appUrlParts.port ? appUrlParts.hostname + ':' + appUrlParts.port : appUrlParts.hostname,
    isEmbeddedApp: true,
    restResources: restResources,
    future: {
      customerAddressDefaultFix: true,
      unstable_managedPricingSupport: true,
    },
    logger: env.get('DEBUG', false)
      ? {
        level: LogSeverity.Debug,
        timestamps: true,
        httpRequests: true,
        log: (_, message) => console?.debug(message),
      }
      : undefined,
  },

  /**
   * A list of additional Shopify apps (e.g., for development or testing)
   * whose credentials are also accepted when validating requests.
   */
  trusted: env.get('SHOPIFY_API_TRUSTED_APPS'),

  /**
   * Defines the Shopify webhook topics that this app should register,
   * along with their corresponding handler URLs.
  */
  webhooks: {
    [SHOPIFY.WEBHOOK_TOPICS.SHOP_UPDATE]: webhookUrl('/webhooks/shops/update'), // Updates shop information if any change is made from Shopify
    [SHOPIFY.WEBHOOK_TOPICS.APP_UNINSTALLED]: webhookUrl('/webhooks/shops/uninstall'), // Uninstalls the app
  },
})

export default shopify

/** Extend the container types for proper inference */
declare module '@mixxtor/adonisjs-shopify/types' {
  interface ShopifyRestResources extends RestResources { }
}
